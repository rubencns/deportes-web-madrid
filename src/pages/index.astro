---
import Header from "@components/Header.astro"
import Layout from "@layouts/Layout.astro"
import {
  getCurrentMatchDayByGroupCode,
  getGamesByGroupCode,
  getNextMatchDayByGroupCode,
} from "@services/games"
import { groupCode1, groupCode2 } from "src/constants/common"
import { getStandings } from "@services/standings"
import GameCard from "@components/GameCard.astro"

/* const filePath = path.join(process.cwd(), "/mock/clasificaciones_20241025.csv");
const csvToString = await fs.readFile(filePath, "utf-8");
const json = await csv2json(csvToString);
console.log("csv to json", json); */

const gamesOfGroup1 = await getGamesByGroupCode(parseInt(groupCode1))
const gamesOfGroup2 = await getGamesByGroupCode(parseInt(groupCode2))

const currentMatchDayOfGroup1 = await getCurrentMatchDayByGroupCode(
  parseInt(groupCode1)
)
const currentMatchDayOfGroup2 = await getCurrentMatchDayByGroupCode(
  parseInt(groupCode2)
)
const nextMatchDayOfGroup1 = await getNextMatchDayByGroupCode(
  parseInt(groupCode1)
)
const nextMatchDayOfGroup2 = await getNextMatchDayByGroupCode(
  parseInt(groupCode2)
)

const standings = await getStandings()
const getTeamStandings = (code: number) =>
  standings.find((standing) => standing.Codigo_equipo === code)

const currentMatchDayGamesOfGroup1 = gamesOfGroup1
  .filter((game) => game.Jornada === currentMatchDayOfGroup1.Jornada)
  .sort((a, b) => a.Partido - b.Partido)
const currentMatchDayGamesOfGroup2 = gamesOfGroup2
  .filter((game) => game.Jornada === currentMatchDayOfGroup2.Jornada)
  .sort((a, b) => a.Partido - b.Partido)
const nextMatchDayGamesOfGroup1 = gamesOfGroup1
  .filter((game) => game.Jornada === nextMatchDayOfGroup1.Jornada)
  .sort((a, b) => a.Partido - b.Partido)
const nextMatchDayGamesOfGroup2 = gamesOfGroup2
  .filter((game) => game.Jornada === nextMatchDayOfGroup2.Jornada)
  .sort((a, b) => a.Partido - b.Partido)
---

<Layout>
  <main class="main">
    <Header />
    <h2 class="section-title">Últimos resultados</h2>
    <h3 class="group-name">Grupo 1</h3>
    <section class="cards-container">
      {
        currentMatchDayGamesOfGroup1.map((game) => (
          <GameCard game={game} hideMatchDay hideCourt />
        ))
      }
    </section>
    <h3 class="group-name">Grupo 2</h3>
    <section class="cards-container">
      {
        currentMatchDayGamesOfGroup2.map((game) => (
          <GameCard game={game} hideMatchDay hideCourt />
        ))
      }
    </section>
    <h2 class="section-title">Próximos partidos</h2>
    <h3 class="group-name">Grupo 1</h3>
    <section class="cards-container">
      {
        nextMatchDayGamesOfGroup1.map((game) => (
          <GameCard game={game} hideMatchDay />
        ))
      }
    </section>
    <h3 class="group-name">Grupo 2</h3>
    <secion class="cards-container">
      {
        nextMatchDayGamesOfGroup2.map((game) => (
          <GameCard game={game} hideMatchDay />
        ))
      }
    </secion>
  </main>
</Layout>

<style>
  .main {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 1rem;
  }

  .section-title {
    margin-block: 1rem;
  }

  .group-name {
    color: var(--black-color);
    font-size: 1rem;
    margin-bottom: 0.75rem;
  }

  .cards-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    overflow: auto;
    margin-bottom: 1rem;
    padding: 0.5rem;
    margin-inline: -0.8rem;
  }
</style>
