---
import Header from "@components/Header.astro"
import Layout from "@layouts/Layout.astro"
import {
  getGamesByGroupCode,
  getMatchDaysByGroupCode,
  getCurrentMatchDayByGroupCode,
} from "@services/games"
import { groupCode1, groupCode2, groupCodes } from "src/constants/common"
import { GAMES_URL } from "src/constants/routes"
import type { MatchDayUI } from "@models/Game"
import { courtInitials } from "@constants/common"
import { isHighestScore } from "@utils/isHighestScore"
import { getStandings } from "@services/standings"

export function getStaticPaths() {
  return groupCodes.map((groupCode) => ({
    params: { groupCode },
  }))
}

const { pathname } = Astro.url
const { groupCode } = Astro.params

const games = await getGamesByGroupCode(groupCode)
const matchDays = await getMatchDaysByGroupCode(groupCode)
const currentMatchDay = await getCurrentMatchDayByGroupCode(groupCode)

const standings = await getStandings()
const getTeamStandings = (code: string) =>
  standings.find((standing) => standing.Codigo_equipo === code)

const isMatchDayOpen = (matchDay: MatchDayUI) => {
  return matchDay.Jornada === currentMatchDay.Jornada
}

const isNextMatchDayOpen = (matchDay: MatchDayUI) => {
  return parseInt(matchDay.Jornada) === parseInt(currentMatchDay.Jornada) + 1
}
---

<Layout>
  <main class="main">
    <Header />
    <h2 class="title">Jornadas</h2>
    <header class="group-buttons-container">
      <a
        class={`group-button${pathname.includes(groupCode1) ? " active" : ""}`}
        href={`${GAMES_URL}/${groupCode1}`}>Grupo 1</a
      >
      <a
        class={`group-button${pathname.includes(groupCode2) ? " active" : ""}`}
        href={`${GAMES_URL}/${groupCode2}`}>Grupo 2</a
      >
    </header>
    <div class="games-container">
      {
        matchDays.map((matchDay) => (
          <details
            open={isMatchDayOpen(matchDay) || isNextMatchDayOpen(matchDay)}
          >
            <summary>
              Jornada {matchDay.Nombre_jornada} - {matchDay.Fecha}
            </summary>
            <div class="game-list-container">
              <table class="game-list">
                <tbody>
                  {games
                    .filter((game) => game.Jornada === matchDay.Jornada)
                    .map((game) => (
                      <tr>
                        <td class="teams">
                          <p
                            class={`${isHighestScore(game.Resultado1, game.Resultado2) ? " highest-score" : ""}`}
                          >
                            {game.Equipo_local}
                            <span class="position">
                              {` (${getTeamStandings(game.Codigo_equipo1)?.Posicion}º)`}
                            </span>
                          </p>
                          <p
                            class={`${isHighestScore(game.Resultado2, game.Resultado1) ? " highest-score" : ""}`}
                          >
                            {game.Equipo_visitante}
                            <span class="position">
                              {` (${getTeamStandings(game.Codigo_equipo2)?.Posicion}º)`}
                            </span>
                          </p>
                        </td>
                        {game.Estado === "F" && (
                          <td>
                            <p
                              class={`game-first-result${isHighestScore(game.Resultado1, game.Resultado2) ? " highest-score" : ""}`}
                            >
                              {game.Resultado1}
                            </p>
                            <p
                              class={`${isHighestScore(game.Resultado2, game.Resultado1) ? " highest-score" : ""}`}
                            >
                              {game.Resultado2}
                            </p>
                          </td>
                        )}
                        <td>{game.Hora}</td>
                        <td>{game.Campo.split(courtInitials)[0]}</td>
                      </tr>
                    ))}
                </tbody>
              </table>
            </div>
          </details>
        ))
      }
    </div>
  </main>
</Layout>

<style>
  .main {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 1rem;
  }

  .title {
    margin-block: 1rem;
  }

  .group-buttons-container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .group-button {
    font-size: 1rem;
    font-weight: 600;
    text-decoration: none;
    color: var(--black-color);
    border: 0.0625rem solid transparent;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    width: fit-content;

    &.active {
      border-color: var(--primary-color);
      color: var(--primary-color);
    }
  }

  .games-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  details {
    border-radius: 0.5rem;
    border: 0.09375rem solid var(--primary-very-light-color);
    background: var(--white-color);
    padding: 1rem;
    cursor: pointer;

    &:hover {
      border-color: var(--primary-light-color);
    }
  }

  summary {
    display: block;
    font-size: 1rem;
    font-weight: 600;
    list-style-type: "▶️";
  }

  summary::before {
    display: inline-block;
    content: "▶️";
    transition: 0.2s;
    transform: scale(1.25);
    margin-right: 0.5rem;
  }

  details[open] {
    border-color: var(--primary-light-color);
  }

  details[open] > summary::before {
    transform: rotate(90deg) scale(1.25);
  }

  details[open] > summary {
    color: var(--primary-color);
  }

  .game-list-container {
    width: 100%;
    border-radius: 0.25rem;
    border: 0.09375rem solid var(--primary-very-light-color);
    margin-block: 1rem;
  }

  .game-list {
    gap: 1rem;
    width: 100%;
    border-collapse: collapse;
  }

  .teams {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  tr:nth-child(odd) {
    td {
      background: var(--primary-very-light-color);
    }
  }

  td {
    font-size: 0.875rem;
    padding: 0.5rem;
    text-align: center;
  }

  td:first-child {
    text-align: left;
  }

  .highest-score {
    font-weight: 600;
  }

  .game-first-result {
    margin-bottom: 0.5rem;
  }

  .position {
    font-size: 0.6rem;
  }
</style>
